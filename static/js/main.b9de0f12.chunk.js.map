{"version":3,"sources":["components/dropdown/index.js","utils.js","components/flipcard-back/index.js","components/flipcard-front/index.js","App.js","index.js"],"names":["Dropdown","children","setData","className","defaultValue","onChange","e","target","value","xmlns","viewBox","d","replaceSpecialChars","txt","replace","FlipcardBack","item","handleAnswer","isCorrectWithIndex","question","shuffle","incorrect_answers","correct_answer","sort","map","answer","answerIndex","itemIndex","itemQuestion","key","onClick","FlipcardFront","index","App","useState","questionRange","setQuestionRange","category","setCategory","difficulty","setDifficulty","data","isCorrect","setIsCorrectWithIndex","isLoading","setIsLoading","setTimeout","filter","x","disabled","hidden","Object","keys","jsonData","NumberOfQuestion","keyName","i","Category","Difficulty","fetch","then","response","json","results","console","log","catch","err","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9de0f12.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Dropdown = ({ children, setData }) => {\r\n  return (\r\n    <div className=\"relative m-4\">\r\n      <select\r\n      defaultValue={\"default\"}\r\n        className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n        onChange={(e) => setData(e.target.value)}\r\n      >\r\n        {children}\r\n      </select>\r\n      <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n        <svg\r\n          className=\"fill-current h-4 w-4\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 20 20\"\r\n        >\r\n          <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;","export const replaceSpecialChars = (txt) =>\r\n  txt\r\n    .replace(/&quot;/g, '\"')\r\n    .replace(/&#039;/g, \"'\")\r\n    .replace(/&micro/g, \"Âµ\");\r\n","import React from \"react\";\r\nimport { replaceSpecialChars } from \"../../utils\";\r\nimport { shuffle } from \"lodash\";\r\n\r\nconst FlipcardBack = ({ item, handleAnswer, isCorrectWithIndex }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"flex flip-card-back text-gray-100 text-base bg-indigo-500\">\r\n        <div className=\"m-auto justify-start\">\r\n          <ul>\r\n            <li className=\"p-1\">\r\n              <p>{replaceSpecialChars(item.question)}</p>\r\n            </li>\r\n            {shuffle([...item.incorrect_answers, item.correct_answer])\r\n              .sort() //Sort to disable re-shuffle\r\n              .map((answer, answerIndex) => (\r\n                <li\r\n                  className={`cursor-pointer hover:text-gray-400 ${\r\n                    isCorrectWithIndex.itemIndex === answerIndex &&\r\n                    isCorrectWithIndex.itemQuestion === item.question &&\r\n                    \"text-yellow-400 hover:text-yellow-500\"\r\n                  }`}\r\n                  key={answerIndex}\r\n                  onClick={(e) => handleAnswer(answer, item, answerIndex)}\r\n                >\r\n                  {isCorrectWithIndex.itemIndex === answerIndex &&\r\n                    isCorrectWithIndex.itemQuestion === item.question && (\r\n                      <span className=\"text-xl text-yellow-400 hover:text-yellow-500\">\r\n                        &#10003;\r\n                      </span>\r\n                    )}\r\n                  {replaceSpecialChars(answer)}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlipcardBack;\r\n","import React from 'react'\r\n\r\nconst FlipcardFront = ({index}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"flex flip-card-front font-bold text-xl mb-2\">\r\n                  <p className=\"m-auto text-gray-100 justify-center\">\r\n                    #{index + 1}\r\n                  </p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlipcardFront","import React, { useState, Fragment } from \"react\";\nimport \"./App.css\";\n\nimport Dropdown from \"./components/dropdown\";\nimport FlipcardBack from \"./components/flipcard-back\";\nimport FlipcardFront from \"./components/flipcard-front\";\n\nimport jsonData from \"./dropdown.json\";\n\nfunction App() {\n  const [questionRange, setQuestionRange] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [isCorrectWithIndex, setIsCorrectWithIndex] = useState({\n    isCorrect: false,\n    itemIndex: 0,\n    itemQuestion: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = () => {\n    if (!!questionRange && !!category && !!difficulty) {\n      setIsLoading(true);\n      fetch(\n        `https://opentdb.com/api.php?amount=${questionRange}&category=${category}&difficulty=${difficulty}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.results) {\n            console.log(data.results);\n            setData(data.results);\n            setIsLoading(false);\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const handleAnswer = (answer, question, answerIndex) => {\n    if (answer === question.correct_answer) {\n      setIsCorrectWithIndex({\n        isCorrect: true,\n        itemIndex: answerIndex,\n        itemQuestion: question.question,\n      });\n      setTimeout(function () {\n        setData(data.filter((x) => x.question !== question.question));\n      }, 1000);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container mx-auto bg-indigo-500 shadow-xl rounded \">\n        <div className=\"p-4 m-4 text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-100\">Ready for quiz ?</h1>\n          <p className=\"text-gray-100\">\n            Pick number of questions, category and difficulty.\n          </p>\n        </div>\n        <div className=\"flex justify-center\">\n          <Dropdown setData={setQuestionRange}>\n            <option value=\"default\" disabled hidden>\n              Pick a number\n            </option>\n            {Object.keys(jsonData.NumberOfQuestion).map((keyName, i) => (\n              <option key={i} value={keyName} className=\"cursor-pointer\">\n                {jsonData.NumberOfQuestion[keyName]}\n              </option>\n            ))}\n          </Dropdown>\n          <Dropdown setData={setCategory}>\n            <option value=\"default\" disabled>\n              Pick a category\n            </option>\n            {Object.keys(jsonData.Category).map((keyName, i) => (\n              <option key={i} value={keyName} className=\"cursor-pointer\">\n                {jsonData.Category[keyName]}\n              </option>\n            ))}\n          </Dropdown>\n          <Dropdown setData={setDifficulty}>\n            <option value=\"default\" disabled hidden>\n              Pick a difficulty\n            </option>\n            {Object.keys(jsonData.Difficulty).map((keyName, i) => (\n              <option key={i} value={keyName} className=\"cursor-pointer \">\n                {jsonData.Difficulty[keyName]}\n              </option>\n            ))}\n          </Dropdown>\n          <button\n            onClick={handleSubmit}\n            className=\"bg-yellow-500 text-white hover:text-indigo-600 font-extrabold py-2 px-4 rounded m-4\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n\n      <div className=\"container flex justify-center mx-auto flex-wrap mt-4 \">\n        {isLoading ? (\n          <div className=\"flex\">\n            <span className=\"spinner \"></span>\n          </div>\n        ) : (\n          data.map((item, index) => {\n            return (\n              <div\n                key={index}\n                className=\"flip-card max-w-lg rounded overflow-hidden shadow-lg relative m-3\"\n              >\n                <div className=\"flip-card-inner bg-yellow-500 \">\n                  <FlipcardFront index={index} />\n                  <FlipcardBack\n                    item={item}\n                    handleAnswer={handleAnswer}\n                    isCorrectWithIndex={isCorrectWithIndex}\n                  />\n                </div>\n              </div>\n            );\n          })\n        )}\n        {}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}